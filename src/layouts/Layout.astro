---
import logoLight from "../assets/logo-light.svg";
import logoDark from "../assets/logo-dark.svg";
import "../styles/base.css";
import "../styles/fonts.css";
import "../styles/theme.css";

interface Props {
	title: string;
	description?: string;
}

const {
	title,
	description = "Digital craftsman delivering high-performance web solutions. Based in Tokyo, Japan.",
} = Astro.props;
const baseUrl = "https://kevintim.com";
const currentPath = Astro.url.pathname;
const lang = currentPath.split("/")[1] || "en";

const localizedDescription = {
	en: description,
	ja: "高性能なウェブソリューションを提供するデジタルクフトマン。東京在住。",
};
---

<!doctype html>
<html
	lang={lang}
	class:list={[lang === "ja" ? "font-japanese" : "font-outfit"]}
>
	<head>
		<script is:inline>
			const theme = (() => {
				if (
					typeof localStorage !== "undefined" &&
					localStorage.getItem("theme")
				) {
					return localStorage.getItem("theme");
				}
				if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
					return "dark";
				}
				return "light";
			})();

			if (theme === "light") {
				document.documentElement.classList.remove("dark");
			} else {
				document.documentElement.classList.add("dark");
			}

			document.documentElement.setAttribute("data-theme-initialized", "");
		</script>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="author" content="Kevin Tim" />
		<meta name="theme-color" content="#2563EB" />
		<meta name="twitter:card" content="summary" />
		<meta name="twitter:title" content={title} />
		<meta
			name="twitter:description"
			content={localizedDescription[lang as keyof typeof localizedDescription]}
		/>
		<meta name="twitter:image" content={logoLight.src} />

		<!-- SEO Meta Tags -->
		<meta
			name="description"
			content={localizedDescription[lang as keyof typeof localizedDescription]}
		/>
		<meta name="robots" content="index, follow" />
		<!-- Open Graph -->
		<meta property="og:title" content={title} />
		<meta
			property="og:description"
			content={localizedDescription[lang as keyof typeof localizedDescription]}
		/>
		<meta property="og:image" content={logoLight.src} />
		<meta property="og:image:width" content="80" />
		<meta property="og:image:height" content="80" />
		<meta property="og:type" content="website" />
		<meta property="og:url" content={`${baseUrl}${currentPath}`} />
		<meta property="og:locale" content={lang === "ja" ? "ja_JP" : "en_US"} />

		<!-- Language alternates -->
		<link
			rel="alternate"
			hreflang="en"
			href={`${baseUrl}/en${currentPath.slice(3)}`}
		/>
		<link
			rel="alternate"
			hreflang="ja"
			href={`${baseUrl}/ja${currentPath.slice(3)}`}
		/>

		<link rel="icon" type="image/svg+xml" href={logoDark.src} />
		<meta name="generator" content={Astro.generator} />
		<!-- Add Google Fonts -->
		<link rel="preload" href="https://fonts.googleapis.com" />
		<link rel="preload" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Klee+One&family=Outfit:wght@100..900&display=swap"
			rel="stylesheet"
		/>
		<title>{title}</title>

		<!-- Global Person JSON-LD -->
		<script
			type="application/ld+json"
			set:html={JSON.stringify({
				"@context": "https://schema.org",
				"@type": "Person",
				name: "Kevin Tim",
				jobTitle: "Software Engineer",
				description:
					"Digital craftsman delivering high-performance web solutions",
				url: "https://kevintim.com",
				sameAs: [
					"https://github.com/mylordkaz",
					"https://linkedin.com/in/kevin-timsiline",
				],
				address: {
					"@type": "PostalAddress",
					addressLocality: "Tokyo",
					addressCountry: "Japan",
				},
			})}
		/>

		<!-- Page-specific JSON-LD -->
		{
			currentPath.includes("/projects") && (
				<script
					type="application/ld+json"
					set:html={JSON.stringify({
						"@context": "https://schema.org",
						"@type": "ItemList",
						itemListElement: [
							{
								"@type": "SoftwareApplication",
								name: "Naps shaving",
								applicationCategory: "WebApplication",
								description:
									"A full-featured Beauty salon website with integrated blog",
								url: "https://napsv.com/",
								operatingSystem: "Any",
								author: {
									"@type": "Person",
									name: "Kevin Tim",
								},
								programmingLanguage: ["SvelteKit", "TypeScript", "MicroCMS"],
							},
							{
								"@type": "SoftwareApplication",
								name: "Cryptrack",
								applicationCategory: "DesktopApplication",
								description:
									"A MacOs desktop app, Cryptocurrencies portfolio tracker",
								operatingSystem: "MacOS",
								author: {
									"@type": "Person",
									name: "Kevin Tim",
								},
								programmingLanguage: ["Golang", "Wails", "React"],
							},
						],
					})}
				/>
			)
		}

		{
			currentPath.includes("/expertise") && (
				<script
					type="application/ld+json"
					set:html={JSON.stringify({
						"@context": "https://schema.org",
						"@type": "ItemList",
						itemListElement: [
							{
								"@type": "Skill",
								name: "Frontend Development",
								description: "Building fast and user-friendly interfaces",
								keywords: [
									"React",
									"Svelte",
									"TypeScript",
									"Tailwind CSS",
									"Remix",
									"Astro",
									"HTML/CSS",
									"JavaScript",
								],
							},
							{
								"@type": "Skill",
								name: "Backend Development",
								description:
									"Creating reliable and efficient server-side applications",
								keywords: [
									"Node.js",
									"Golang",
									"Laravel",
									"PostgreSQL",
									"SQLite",
									"Prisma",
									"REST APIs",
									"GraphQL",
								],
							},
							{
								"@type": "Skill",
								name: "DevOps & App Development",
								description:
									"Managing cloud environments and creating applications",
								keywords: [
									"Docker",
									"AWS",
									"CI/CD",
									"React Native",
									"Wails",
									"Git",
									"GitHub",
								],
							},
						],
					})}
				/>
			)
		}
	</head>
	<body>
		<slot />
	</body>
</html>
