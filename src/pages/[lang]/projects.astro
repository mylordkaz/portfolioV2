---
import { Image } from "astro:assets";
import imgProject from "../../assets/projectHero.webp";
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/layout/Header.astro";
import Footer from "../../components/layout/Footer.astro";
import translations from "../../i18n";
import { projects } from "../../data/projects";
import ProjectModal from "../../components/sections/ProjectModal.astro";

export function getStaticPaths() {
	return [
		{ params: { lang: "en" } },
		{ params: { lang: "ja" } },
		{ params: { lang: "fr" } },
	];
}

const currentPath = Astro.url.pathname;
const lang = currentPath.split("/")[1] || "en";
const t = translations[lang as keyof typeof translations];
---

<Layout title={`${t.projects.title} - Kevin-Tim Portfolio`}>
	<Header />

	<!-- Hero Section -->
	<section
		class="bg-light-surface-hero dark:bg-dark-surface-hero min-h-[60vh] flex items-center"
	>
		<div class="container mx-auto p-8 md:px-24">
			<div class="flex flex-col md:flex-row items-center gap-12">
				<div class="flex-1">
					<h1
						class="text-5xl font-bold text-light-text-primary dark:text-dark-text-primary mb-4"
					>
						{t.projects.title}
					</h1>
					<h2
						class="text-3xl text-light-text-secondary dark:text-dark-text-secondary mb-4"
					>
						{t.projects.subtitle}
					</h2>
					<p
						class="text-xl text-light-text-secondary dark:text-dark-text-secondary"
					>
						{t.projects.description}
					</p>
				</div>
				<div class="flex-1 max-w-md">
					<div class="aspect-[4/3] overflow-hidden rounded-[30px]">
						<Image
							src={imgProject}
							alt="projects Overview"
							width={500}
							height={375}
							class="w-full h-full object-cover"
							format="webp"
							quality={95}
							loading="eager"
						/>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- Projects Grid Section -->
	<!-- Projects Grid Section -->
	<section class="bg-light-surface-main dark:bg-dark-surface-main py-20">
		<div class="container mx-auto p-12 md:px-24">
			<div
				class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-12 max-w-7xl mx-auto"
			>
				{
					projects.map((project) => (
						<>
							<div class="group bg-white dark:bg-dark-surface-header rounded-xl shadow-lg overflow-hidden transition-transform hover:scale-[1.02] h-full flex flex-col">
								<div class="w-full h-[180px]">
									<Image
										src={project.image}
										alt={project.title}
										width={600}
										height={338}
										class="w-full h-full object-cover"
										format="webp"
										quality={100}
										loading="eager"
									/>
								</div>
								<div class="p-6 flex flex-col flex-grow min-h-[250px]">
									{" "}
									{/* Add min-height */}
									{/* Content section */}
									<div class="mb-4">
										<h3 class="text-xl font-bold text-light-text-primary dark:text-dark-text-primary mb-2">
											{project.title}
										</h3>
										<p class="text-light-text-secondary dark:text-dark-text-secondary">
											{t.projects[project.descriptionKey]}
										</p>
									</div>
									{/* Spacer that grows/shrinks based on content */}
									<div class="flex-grow" />
									{/* Bottom section with tags and button */}
									<div>
										<div class="flex flex-wrap gap-2 mb-4">
											{project.tags.map((tag) => (
												<span class="px-3 py-1 text-sm font-medium border border-light-text-accent dark:border-dark-text-accent rounded-full text-light-text-primary dark:text-dark-text-primary">
													{tag}
												</span>
											))}
										</div>
										<div class="flex justify-end">
											<button
												id={`modal-open-${project.id}`}
												type="button"
												class="inline-block px-4 py-2 bg-light-text-accent dark:bg-dark-text-accent text-white rounded-lg hover:opacity-90 transition-opacity"
											>
												{t.projects.viewBtn}
											</button>
										</div>
									</div>
								</div>
							</div>

							<ProjectModal
								id={project.id}
								title={project.title}
								description={t.projects[project.descriptionKey]}
								detailedDescription={project.detailedDescription}
								technicalDescription={project.technicalDescription}
								image={project.image}
								galleryImages={project.galleryImages}
								tags={project.tags}
								link={project.link}
							/>
						</>
					))
				}
			</div>
		</div>
	</section>
	<Footer />
</Layout>
